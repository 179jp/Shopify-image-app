// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Image {
  id            String    @id @default(uuid())
  fileId        String    @unique
  title         String?
  alt           String?
  collections   Collection[] @relation()
  tags          ImageTag[]
  productsOnImage ProductOnImage[]
  recommendProducts RecommendProduct[]

  @@index([fileId])
}

model Collection {
  collectionId String
  imageId String
  
  @@id([collectionId, imageId])
  @@index([collectionId])
  @@index([imageId])

  image Image @relation(fields: [imageId], references: [id])
}

model Tag {
  id    String  @id @default(uuid())
  name  String  @unique
  images ImageTag[]
}

model ImageTag {
  imageId String
  tagId  String

  @@id([imageId, tagId])
  @@index([imageId])
  @@index([tagId])

  image Image @relation(fields: [imageId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])
}

model ProductOnImage {
  id            String    @id @default(uuid())
  imageId       String
  productId     String
  positionX     Float
  positionY     Float

  @@index([imageId])
  @@index([productId])

  image Image @relation(fields: [imageId], references: [id])
}

model RecommendProduct {
  imageId       String
  productId     String

  @@id([imageId, productId])
  @@index([imageId])
  @@index([productId])

  image Image @relation(fields: [imageId], references: [id])
}